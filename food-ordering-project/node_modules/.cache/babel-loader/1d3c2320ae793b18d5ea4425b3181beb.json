{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SunilSolankiIntern\\\\Desktop\\\\food-starting-project\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isSixDigit = value => value.trim().length === 6;\n\nconst isTenDigit = value => value.trim().length === 10;\n\nconst Checkout = props => {\n  _s();\n\n  const [formValiditity, setFormValidity] = useState({\n    name: true,\n    address: true,\n    postal: true,\n    city: true,\n    number: true\n  });\n  const nameInputRef = useRef();\n  const addressInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const numberInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredAddress = addressInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNumber = numberInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredAddressIsValid = !isEmpty(enteredAddress);\n    const enteredPostalIsValid = isSixDigit(enteredPostal);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredNumberIsValid = isTenDigit(enteredNumber);\n    setFormValidity({\n      name: enteredNumberIsValid,\n      address: enteredAddressIsValid,\n      postal: enteredPostalIsValid,\n      city: enteredCityIsValid,\n      number: enteredNumberIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredAddressIsValid && enteredPostalIsValid && enteredCityIsValid && enteredNumberIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), !formValiditity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error,\n        children: \"Please enter a valid name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"address\",\n        ref: addressInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), !formValiditity.address && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error,\n        children: \"Please enter a valid address.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), !formValiditity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error,\n        children: \"Please enter a valid postal code.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), !formValiditity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error,\n        children: \"Please enter a valid city.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"number\",\n        children: \"Mobile Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"number\",\n        ref: numberInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), !formValiditity.number && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error,\n        children: \"Please enter a valid number.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"jCIfg2ZMf7nStdi2LadbZXmv8kI=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/SunilSolankiIntern/Desktop/food-starting-project/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isSixDigit","length","isTenDigit","Checkout","props","formValiditity","setFormValidity","name","address","postal","city","number","nameInputRef","addressInputRef","postalInputRef","cityInputRef","numberInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredAddress","enteredPostal","enteredCity","enteredNumber","enteredNameIsValid","enteredAddressIsValid","enteredPostalIsValid","enteredCityIsValid","enteredNumberIsValid","formIsValid","form","control","error","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isSixDigit = (value) => value.trim().length === 6;\r\nconst isTenDigit = (value) => value.trim().length === 10;\r\n\r\nconst Checkout = (props) => {\r\n    const [formValiditity, setFormValidity] = useState({\r\n        name: true,\r\n        address: true,\r\n        postal: true,\r\n        city: true,\r\n        number: true,\r\n    });\r\n\r\n  const nameInputRef = useRef();\r\n  const addressInputRef = useRef();\r\n  const postalInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n  const numberInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredAddress = addressInputRef.current.value;\r\n    const enteredPostal = postalInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n    const enteredNumber = numberInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredAddressIsValid = !isEmpty(enteredAddress);\r\n    const enteredPostalIsValid = isSixDigit(enteredPostal);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredNumberIsValid = isTenDigit(enteredNumber);\r\n\r\n\r\n    setFormValidity({\r\n        name: enteredNumberIsValid,\r\n        address: enteredAddressIsValid,\r\n        postal: enteredPostalIsValid,\r\n        city: enteredCityIsValid,\r\n        number: enteredNumberIsValid\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredAddressIsValid &&\r\n      enteredPostalIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredNumberIsValid;\r\n\r\n\r\n      if (!formIsValid){\r\n          return;\r\n      }\r\n\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n        {!formValiditity.name && <p className={classes.error}>Please enter a valid name.</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"address\">Address</label>\r\n        <input type=\"text\" id=\"address\" ref={addressInputRef} />\r\n        {!formValiditity.address && <p className={classes.error}>Please enter a valid address.</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalInputRef} />\r\n        {!formValiditity.postal && <p className={classes.error}>Please enter a valid postal code.</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n        {!formValiditity.city && <p className={classes.error}>Please enter a valid city.</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"number\">Mobile Number</label>\r\n        <input type=\"text\" id=\"number\" ref={numberInputRef} />\r\n        {!formValiditity.number && <p className={classes.error}>Please enter a valid number.</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}