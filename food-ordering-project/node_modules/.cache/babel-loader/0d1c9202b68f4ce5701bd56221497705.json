{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SunilSolankiIntern\\\\Desktop\\\\food-starting-project\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"../../store/cart-context\";\nimport React, { useContext, useState } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport classes from \"./Cart.module.css\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [placingOrder, setPlacingOrder] = useState(false);\n  const [ordered, setOrdered] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const orderConfirmHandler = async userData => {\n    setPlacingOrder(true);\n    await fetch(\"https://server-project-1ff7a-default-rtdb.firebaseio.com/orders.json\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        user: userData,\n        orderItems: cartCtx.items\n      })\n    });\n    setPlacingOrder(false);\n    setOrdered(true);\n  };\n\n  const totalAmount = `â‚¹${cartCtx.totalAmount.toFixed(2)}`;\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n\n  const orderbtn = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onCloseCart,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n\n  const modalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [hasItems && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Review your cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), !hasItems && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: classes.emptycart,\n      children: \"Please add something to order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [hasItems && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 22\n      }, this), hasItems && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: orderConfirmHandler,\n      onCancel: props.onCloseCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), !isCheckout && orderbtn]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n\n  const isPlacingOrder = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Placing Order...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 26\n  }, this);\n\n  const isOrdered = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Order placed Successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: props.onCloseCart,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onpress: props.onCloseCart,\n    children: !placingOrder && !ordered && modalContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"KnbDc5RTT6INiQrfHPVAJcGLWfM=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/SunilSolankiIntern/Desktop/food-starting-project/src/components/Cart/Cart.js"],"names":["CartContext","React","useContext","useState","Modal","CartItem","classes","Checkout","Cart","props","isCheckout","setIsCheckout","placingOrder","setPlacingOrder","ordered","setOrdered","cartCtx","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","orderConfirmHandler","userData","fetch","method","body","JSON","stringify","user","orderItems","totalAmount","toFixed","cartItems","map","name","price","bind","orderbtn","actions","onCloseCart","button","modalContent","emptycart","total","isPlacingOrder","isOrdered"],"mappings":"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","sourcesContent":["import CartContext from \"../../store/cart-context\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\nimport CartItem from \"./CartItem\";\r\nimport classes from \"./Cart.module.css\";\r\nimport Checkout from \"./Checkout\";\r\n\r\nconst Cart = (props) => {\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const [placingOrder, setPlacingOrder] = useState(false);\r\n  const [ordered, setOrdered] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true);\r\n  };\r\n\r\n  const orderConfirmHandler = async (userData) => {\r\n    setPlacingOrder(true);\r\n    await fetch(\r\n      \"https://server-project-1ff7a-default-rtdb.firebaseio.com/orders.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderItems: cartCtx.items,\r\n        }),\r\n      }\r\n    );\r\n    setPlacingOrder(false);\r\n    setOrdered(true);\r\n  };\r\n\r\n  const totalAmount = `â‚¹${cartCtx.totalAmount.toFixed(2)}`;\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const orderbtn = (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button--alt\"]} onClick={props.onCloseCart}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const modalContent = (\r\n    <React.Fragment>\r\n      {hasItems && (\r\n        <p>\r\n          <b>Review your cart</b>\r\n        </p>\r\n      )}\r\n      {!hasItems && (\r\n        <h3 className={classes.emptycart}>Please add something to order</h3>\r\n      )}\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        {hasItems && <span>Total Amount</span>}\r\n        {hasItems && <span>{totalAmount}</span>}\r\n      </div>\r\n      {isCheckout && (\r\n        <Checkout\r\n          onConfirm={orderConfirmHandler}\r\n          onCancel={props.onCloseCart}\r\n        />\r\n      )}\r\n      {!isCheckout && orderbtn}\r\n    </React.Fragment>\r\n  );\r\n\r\n  const isPlacingOrder = <p>Placing Order...</p>;\r\n\r\n  const isOrdered = \r\n  <React.Fragment>\r\n  <p>Order placed Successfully!</p>\r\n  <div className={classes.actions}>\r\n      <button className={classes.button} onClick={props.onCloseCart}>\r\n        Close\r\n      </button>\r\n    </div>\r\n    </React.Fragment>\r\n\r\n  return (\r\n    <Modal onpress={props.onCloseCart}>\r\n      {!placingOrder && !ordered && modalContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}