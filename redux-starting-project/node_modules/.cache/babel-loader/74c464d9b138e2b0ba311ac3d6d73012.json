{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    clear(state) {\n      state.counter = state.counter - state.counter;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n}); // const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n//   return state;\n// };\n\nconst authSlice = createSlice({\n  name: auth,\n  isauthenticated: false,\n  reducers: {\n    login() {\n      isauthenticated = true;\n    },\n\n    logout() {\n      isauthenticated = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterAction = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["C:/Users/SunilSolankiIntern/Desktop/redux-starting-project/src/store/index.js"],"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","clear","increase","action","payload","toggleCounter","authSlice","auth","isauthenticated","login","logout","store","reducer","counterAction","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BJ,EAAAA,YAF+B;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KAHO;;AAIRO,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KANO;;AAORQ,IAAAA,KAAK,CAACF,KAAD,EAAQ;AACXA,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAtC;AACD,KATO;;AAURS,IAAAA,QAAQ,CAACH,KAAD,EAAQI,MAAR,EAAgB;AACtBJ,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACD,KAZO;;AAaRC,IAAAA,aAAa,CAACN,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACD;;AAfO;AAHqB,CAAD,CAAhC,C,CAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA,MAAMY,SAAS,GAAGhB,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAEW,IADsB;AAE5BC,EAAAA,eAAe,EAAE,KAFW;AAG5BX,EAAAA,QAAQ,EAAE;AACRY,IAAAA,KAAK,GAAE;AACLD,MAAAA,eAAe,GAAG,IAAlB;AACD,KAHO;;AAIRE,IAAAA,MAAM,GAAE;AACNF,MAAAA,eAAe,GAAG,KAAlB;AACD;;AANO;AAHkB,CAAD,CAA7B;AAcA,MAAMG,KAAK,GAAGpB,cAAc,CAAC;AAC3BqB,EAAAA,OAAO,EAAEjB,YAAY,CAACiB;AADK,CAAD,CAA5B;AAIA,OAAO,MAAMC,aAAa,GAAGlB,YAAY,CAACmB,OAAnC;AACP,eAAeH,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    clear(state) {\r\n      state.counter = state.counter - state.counter;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"increment\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"decrement\") {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"toggle\") {\r\n//     return {\r\n//       showCounter: !state.showCounter,\r\n//       counter: state.counter,\r\n//     };\r\n//   }\r\n\r\n//   return state;\r\n// };\r\n\r\n\r\nconst authSlice = createSlice({\r\n  name: auth,\r\n  isauthenticated: false,\r\n  reducers: {\r\n    login(){\r\n      isauthenticated = true\r\n    },\r\n    logout(){\r\n      isauthenticated = false\r\n    }\r\n  }\r\n})\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: counterSlice.reducer,\r\n});\r\n\r\nexport const counterAction = counterSlice.actions;\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}