{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    clear(state) {\n      state.counter = state.counter - state.counter;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nexport const counterAction = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"sources":["C:/Users/SunilSolankiIntern/Desktop/redux-starting-project/src/store/counter.js"],"names":["createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","clear","increase","action","payload","toggleCounter","counterAction","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC/BK,EAAAA,IAAI,EAAE,SADyB;AAE/BJ,EAAAA,YAF+B;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KAHO;;AAIRO,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KANO;;AAORQ,IAAAA,KAAK,CAACF,KAAD,EAAQ;AACXA,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAtC;AACD,KATO;;AAURS,IAAAA,QAAQ,CAACH,KAAD,EAAQI,MAAR,EAAgB;AACtBJ,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACD,KAZO;;AAaRC,IAAAA,aAAa,CAACN,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACD;;AAfO;AAHqB,CAAD,CAAhC;AAsBA,OAAO,MAAMY,aAAa,GAAGX,YAAY,CAACY,OAAnC;AACP,eAAeZ,YAAY,CAACa,OAA5B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    clear(state) {\r\n      state.counter = state.counter - state.counter;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nexport const counterAction = counterSlice.actions;\r\nexport default counterSlice.reducer;"]},"metadata":{},"sourceType":"module"}