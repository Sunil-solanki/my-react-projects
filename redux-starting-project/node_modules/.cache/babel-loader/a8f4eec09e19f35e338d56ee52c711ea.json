{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SunilSolankiIntern\\\\Desktop\\\\redux-starting-project\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch, connect } from \"react-redux\";\nimport { Component } from \"react\";\nimport classes from \"./Counter.module.css\";\nimport { counterAction } from \"../store/counter\"; // -----------------------**--function based redux--**--------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter.counter);\n  const show = useSelector(state => state.counter.showCounter);\n\n  const incrementHandler = () => {\n    dispatch(counterAction.increment());\n  };\n\n  const increase = () => {\n    dispatch(counterAction.increase(10));\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterAction.decrement());\n  };\n\n  const clearcounterHandler = () => {\n    dispatch(counterAction.clear());\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterAction.toggleCounter());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementHandler,\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increase,\n      children: \"Increment By 5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrementHandler,\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearcounterHandler,\n      children: \"Clear Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"a6W6bcAuHVADZPU2xn93xNQZltc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter; // ---------------classes based redux--------------------------\n// class Counter extends Component {\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n//   decrementHandler() {\n//     this.props.decrement();\n//   }\n//   toggleCounterHandler() {}\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//         <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n// const mapStateToProps = (state) => {\n//   return {\n//     counter: state.counter,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     increment: () => dispatch({ type: \"increment\" }),\n//     decrement: () => dispatch({ type: \"decrement\" }),\n//   };\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/Users/SunilSolankiIntern/Desktop/redux-starting-project/src/components/Counter.js"],"names":["useSelector","useDispatch","connect","Component","classes","counterAction","Counter","dispatch","counter","state","show","showCounter","incrementHandler","increment","increase","decrementHandler","decrement","clearcounterHandler","clear","toggleCounterHandler","toggleCounter","value"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,OAAnC,QAAkD,aAAlD;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,aAAT,QAA8B,kBAA9B,C,CAEA;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,OAAO,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcA,OAA1B,CAA3B;AACA,QAAME,IAAI,GAAGV,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcG,WAA1B,CAAxB;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BL,IAAAA,QAAQ,CAACF,aAAa,CAACQ,SAAd,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACrBP,IAAAA,QAAQ,CAACF,aAAa,CAACS,QAAd,CAAuB,EAAvB,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BR,IAAAA,QAAQ,CAACF,aAAa,CAACW,SAAd,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAG,MAAM;AAChCV,IAAAA,QAAQ,CAACF,aAAa,CAACa,KAAd,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAG,MAAM;AACjCZ,IAAAA,QAAQ,CAACF,aAAa,CAACe,aAAd,EAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAEhB,OAAO,CAACI,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,IAAI,iBAAI;AAAK,MAAA,SAAS,EAAEN,OAAO,CAACiB,KAAxB;AAAA,gBAAgCb;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFX,eAGE;AAAQ,MAAA,OAAO,EAAEI,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAEC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAQ,MAAA,OAAO,EAAEE,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAQ,MAAA,OAAO,EAAEE,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApCD;;GAAMb,O;UACaL,W,EACDD,W,EACHA,W;;;KAHTM,O;AAsCN,eAAeA,OAAf,C,CAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { useSelector, useDispatch, connect } from \"react-redux\";\nimport { Component } from \"react\";\nimport classes from \"./Counter.module.css\";\nimport { counterAction } from \"../store/counter\";\n\n// -----------------------**--function based redux--**--------------------\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector((state) => state.counter.counter);\n  const show = useSelector((state) => state.counter.showCounter);\n\n  const incrementHandler = () => {\n    dispatch(counterAction.increment());\n  };\n\n  const increase = () => {\n    dispatch(counterAction.increase(10));\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterAction.decrement());\n  };\n\n  const clearcounterHandler = () => {\n    dispatch(counterAction.clear());\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterAction.toggleCounter());\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter}</div>}\n      <button onClick={incrementHandler}>Increment</button>\n      <button onClick={increase}>Increment By 5</button>\n      <button onClick={decrementHandler}>Decrement</button>\n      <button onClick={clearcounterHandler}>Clear Counter</button>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n\n// ---------------classes based redux--------------------------\n\n// class Counter extends Component {\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n\n//   decrementHandler() {\n//     this.props.decrement();\n//   }\n\n//   toggleCounterHandler() {}\n\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//         <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state) => {\n//   return {\n//     counter: state.counter,\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     increment: () => dispatch({ type: \"increment\" }),\n//     decrement: () => dispatch({ type: \"decrement\" }),\n//   };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n"]},"metadata":{},"sourceType":"module"}