{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingitem = state.items.find(item => item.id === newItem.id);\n\n      if (!existingitem) {\n        state.item.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingitem.quantity++;\n        existingitem.totalPrice = existingitem.totalPrice + newItem.price;\n      }\n    }\n\n  }\n});","map":{"version":3,"sources":["C:/Users/SunilSolankiIntern/Desktop/ecomerce-starting-project/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addToCart","state","action","newItem","payload","existingitem","find","item","id","push","itemId","price","quantity","totalPrice","title"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAIA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE,EADG;AAEVC,IAAAA,aAAa,EAAE;AAFL,GAFY;AAM1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAiB;AACtB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA7C,CAArB;;AACA,UAAG,CAACH,YAAJ,EAAiB;AACbJ,QAAAA,KAAK,CAACM,IAAN,CAAWE,IAAX,CAAgB;AACZC,UAAAA,MAAM,EAAEP,OAAO,CAACK,EADJ;AAEZG,UAAAA,KAAK,EAAER,OAAO,CAACQ,KAFH;AAGZC,UAAAA,QAAQ,EAAE,CAHE;AAIZC,UAAAA,UAAU,EAAEV,OAAO,CAACQ,KAJR;AAKZhB,UAAAA,IAAI,EAACQ,OAAO,CAACW;AALD,SAAhB;AAOH,OARD,MAQK;AACDT,QAAAA,YAAY,CAACO,QAAb;AACAP,QAAAA,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACQ,UAAb,GAA0BV,OAAO,CAACQ,KAA5D;AACH;AACJ;;AAhBK;AANgB,CAAD,CAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n    },\r\n    reducers: {\r\n        addToCart(state, action)  {\r\n            const newItem = action.payload;\r\n            const existingitem = state.items.find(item => item.id === newItem.id);\r\n            if(!existingitem){\r\n                state.item.push({\r\n                    itemId: newItem.id, \r\n                    price: newItem.price, \r\n                    quantity: 1, \r\n                    totalPrice: newItem.price, \r\n                    name:newItem.title\r\n                });\r\n            }else{\r\n                existingitem.quantity++;\r\n                existingitem.totalPrice = existingitem.totalPrice + newItem.price;\r\n            }\r\n        }\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}