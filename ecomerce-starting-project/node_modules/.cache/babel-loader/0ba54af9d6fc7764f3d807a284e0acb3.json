{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingitem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingitem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingitem.quantity++;\n        existingitem.totalPrice = existingitem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingitem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingitem.quantity === 1) {\n        state.items.find(item => item.id !== id);\n      } else {\n        existingitem.quantity--;\n        existingitem.totalPrice = existingitem.totalPrice - existingitem.price;\n      }\n    }\n\n  }\n});\nexport const cartAction = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["C:/Users/SunilSolankiIntern/Desktop/ecomerce-starting-project/src/store/cart-slice.js"],"names":["createSlice","initialState","items","totalQuantity","cartSlice","name","reducers","addToCart","state","action","newItem","payload","existingitem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","cartAction","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,aAAa,EAAE;AAFE,CAArB;AAKA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC5BK,EAAAA,IAAI,EAAE,MADsB;AAE5BJ,EAAAA,YAF4B;AAG5BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACN,KAAN,CAAYW,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;AACAP,MAAAA,KAAK,CAACL,aAAN;;AACA,UAAI,CAACS,YAAL,EAAmB;AACjBJ,QAAAA,KAAK,CAACN,KAAN,CAAYc,IAAZ,CAAiB;AACfD,UAAAA,EAAE,EAAEL,OAAO,CAACK,EADG;AAEfE,UAAAA,KAAK,EAAEP,OAAO,CAACO,KAFA;AAGfC,UAAAA,QAAQ,EAAE,CAHK;AAIfC,UAAAA,UAAU,EAAET,OAAO,CAACO,KAJL;AAKfZ,UAAAA,IAAI,EAAEK,OAAO,CAACU;AALC,SAAjB;AAOD,OARD,MAQO;AACLR,QAAAA,YAAY,CAACM,QAAb;AACAN,QAAAA,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BT,OAAO,CAACO,KAA5D;AACD;AACF,KAjBO;;AAkBRI,IAAAA,kBAAkB,CAACb,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACN,KAAN,CAAYW,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAArB;AACAP,MAAAA,KAAK,CAACL,aAAN;;AACA,UAAIS,YAAY,CAACM,QAAb,KAA0B,CAA9B,EAAiC;AAC/BV,QAAAA,KAAK,CAACN,KAAN,CAAYW,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC;AACD,OAFD,MAEO;AACLH,QAAAA,YAAY,CAACM,QAAb;AACAN,QAAAA,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACK,KAAjE;AACD;AACF;;AA5BO;AAHkB,CAAD,CAA7B;AAmCA,OAAO,MAAMK,UAAU,GAAGlB,SAAS,CAACmB,OAA7B;AACP,eAAenB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  }\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingitem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      if (!existingitem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingitem.quantity++;\r\n        existingitem.totalPrice = existingitem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingitem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      if (existingitem.quantity === 1) {\r\n        state.items.find((item) => item.id !== id);\r\n      } else {\r\n        existingitem.quantity--;\r\n        existingitem.totalPrice = existingitem.totalPrice - existingitem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartAction = cartSlice.actions;\r\nexport default cartSlice;\r\n"]},"metadata":{},"sourceType":"module"}