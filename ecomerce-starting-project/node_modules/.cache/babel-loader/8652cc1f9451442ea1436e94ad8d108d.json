{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingitem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingitem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingitem.quantity++;\n        existingitem.totalPrice = existingitem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingitem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingitem.quantity === 1) {\n        state.items.find(item => item.id !== id);\n      } else {\n        existingitem.quantity--;\n        existingitem.totalPrice = existingitem.totalPrice - existingitem.price;\n      }\n    }\n\n  }\n});\nexport const cartAction = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["C:/Users/SunilSolankiIntern/Desktop/ecomerce-starting-project/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addToCart","state","action","newItem","payload","existingitem","find","item","id","push","itemId","price","quantity","totalPrice","title","removeItemFromCart","cartAction","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,aAAa,EAAE;AAFH,GAFc;AAM5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;AACAP,MAAAA,KAAK,CAACH,aAAN;;AACA,UAAI,CAACO,YAAL,EAAmB;AACjBJ,QAAAA,KAAK,CAACJ,KAAN,CAAYY,IAAZ,CAAiB;AACfC,UAAAA,MAAM,EAAEP,OAAO,CAACK,EADD;AAEfG,UAAAA,KAAK,EAAER,OAAO,CAACQ,KAFA;AAGfC,UAAAA,QAAQ,EAAE,CAHK;AAIfC,UAAAA,UAAU,EAAEV,OAAO,CAACQ,KAJL;AAKfhB,UAAAA,IAAI,EAAEQ,OAAO,CAACW;AALC,SAAjB;AAOD,OARD,MAQO;AACLT,QAAAA,YAAY,CAACO,QAAb;AACAP,QAAAA,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACQ,UAAb,GAA0BV,OAAO,CAACQ,KAA5D;AACD;AACF,KAjBO;;AAkBRI,IAAAA,kBAAkB,CAACd,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAArB;AACAP,MAAAA,KAAK,CAACH,aAAN;;AACA,UAAIO,YAAY,CAACO,QAAb,KAA0B,CAA9B,EAAiC;AAC/BX,QAAAA,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC;AACD,OAFD,MAEO;AACLH,QAAAA,YAAY,CAACO,QAAb;AACAP,QAAAA,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACM,KAAjE;AACD;AACF;;AA5BO;AANkB,CAAD,CAA7B;AAsCA,OAAO,MAAMK,UAAU,GAAGtB,SAAS,CAACuB,OAA7B;AACP,eAAevB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    addToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingitem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      if (!existingitem) {\r\n        state.items.push({\r\n          itemId: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingitem.quantity++;\r\n        existingitem.totalPrice = existingitem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingitem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      if (existingitem.quantity === 1) {\r\n        state.items.find((item) => item.id !== id);\r\n      } else {\r\n        existingitem.quantity--;\r\n        existingitem.totalPrice = existingitem.totalPrice - existingitem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartAction = cartSlice.actions;\r\nexport default cartSlice;\r\n"]},"metadata":{},"sourceType":"module"}