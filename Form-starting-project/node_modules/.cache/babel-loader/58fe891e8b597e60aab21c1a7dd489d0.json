{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SunilSolankiIntern\\\\Desktop\\\\Form-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState();\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n\n  const inputChangeHandler = event => {\n    setEnteredName(event.target.value);\n\n    if (enteredName !== 0) {\n      setEnteredNameIsValid(true);\n    }\n  };\n\n  const blurChangeHandler = event => {\n    setEnteredNameTouched(true);\n\n    if (enteredName === '') {\n      setEnteredNameIsValid(false);\n    }\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    console.log(enteredName);\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const invalidInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: invalidInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: inputChangeHandler,\n        onBlur: blurChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"OFWR4doFGeoMYcCYNGs5fqCKrpI=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/SunilSolankiIntern/Desktop/Form-starting-project/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","inputChangeHandler","event","target","value","setEnteredNameIsValid","blurChangeHandler","formSubmitHandler","preventDefault","console","log","nameInputIsInvalid","invalidInputClasses"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,EAA9C;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;AAEA,QAAMO,kBAAkB,GAAGJ,WAAW,CAACK,IAAZ,OAAuB,EAAlD;;AAEA,QAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpCN,IAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;;AACA,QAAIT,WAAW,KAAK,CAApB,EAAsB;AACpBU,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;AACF,GALD;;AAOA,QAAMC,iBAAiB,GAAGJ,KAAK,IAAI;AACjCJ,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AAEA,QAAIH,WAAW,KAAK,EAApB,EAAuB;AACrBU,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;AACF,GAND;;AAQA,QAAME,iBAAiB,GAAIL,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACM,cAAN;AAEAV,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AAEA,QAAIH,WAAW,CAACK,IAAZ,OAAuB,EAA3B,EAA8B;AAC5BK,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AAEDI,IAAAA,OAAO,CAACC,GAAR,CAAYf,WAAZ;AACAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAZD;;AAcA,QAAMe,kBAAkB,GAAG,CAACZ,kBAAD,IAAuBF,kBAAlD;AAEA,QAAMe,mBAAmB,GAAGD,kBAAkB,GAAG,sBAAH,GAA4B,cAA1E;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEJ,iBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEK,mBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,QAAQ,EAAEX,kBAHZ;AAIE,QAAA,MAAM,EAAEK,iBAJV;AAKE,QAAA,KAAK,EAAEX;AALT;AAAA;AAAA;AAAA;AAAA,cAFF,EASGgB,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAzDD;;GAAMlB,W;;KAAAA,W;AA2DN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState();\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n\n  const inputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n    if (enteredName !== 0){\n      setEnteredNameIsValid(true);\n    }\n  };\n\n  const blurChangeHandler = event => {\n    setEnteredNameTouched(true);\n\n    if (enteredName === ''){\n      setEnteredNameIsValid(false);\n    }\n  }\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === ''){\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    console.log(enteredName);\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const invalidInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={invalidInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={inputChangeHandler}\n          onBlur={blurChangeHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}