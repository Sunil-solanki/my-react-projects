{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SunilSolankiIntern\\\\Desktop\\\\Form-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState();\n  const nameInputref = useRef();\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(true);\n\n  const inputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    ;\n    console.log(enteredName);\n    const enteredValue = nameInputref.current.value;\n    console.log(enteredValue);\n    setEnteredName(\"\");\n  };\n\n  const invalidInputClasses = enteredNameIsValid ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: invalidInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputref,\n        type: \"text\",\n        id: \"name\",\n        onChange: inputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), !enteredNameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"mVlyhRciDd0ZEgEaFtla/3nrqLc=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/SunilSolankiIntern/Desktop/Form-starting-project/src/components/SimpleInput.js"],"names":["useState","useRef","SimpleInput","props","enteredName","setEnteredName","nameInputref","enteredNameIsValid","setEnteredNameIsValid","inputChangeHandler","event","target","value","formSubmitHandler","preventDefault","trim","console","log","enteredValue","current","invalidInputClasses"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,EAA9C;AACA,QAAMM,YAAY,GAAGL,MAAM,EAA3B;AACA,QAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,IAAD,CAA5D;;AAEA,QAAMS,kBAAkB,GAAIC,KAAD,IAAW;AACpCL,IAAAA,cAAc,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAIH,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACI,cAAN;;AAEA,QAAIV,WAAW,CAACW,IAAZ,OAAuB,EAA3B,EAA8B;AAC5BP,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AAAA;AAEDQ,IAAAA,OAAO,CAACC,GAAR,CAAYb,WAAZ;AACA,UAAMc,YAAY,GAAGZ,YAAY,CAACa,OAAb,CAAqBP,KAA1C;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACAb,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAZD;;AAcA,QAAMe,mBAAmB,GAAGb,kBAAkB,GAAG,cAAH,GAAoB,sBAAlE;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEM,iBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEO,mBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,GAAG,EAAEd,YADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,QAAQ,EAAEG,kBAJZ;AAKE,QAAA,KAAK,EAAEL;AALT;AAAA;AAAA;AAAA;AAAA,cAFF,EASG,CAACG,kBAAD,iBAAuB;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAT1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA3CD;;GAAML,W;;KAAAA,W;AA6CN,eAAeA,WAAf","sourcesContent":["import { useState, useRef } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState();\n  const nameInputref = useRef();\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(true);\n\n  const inputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    if (enteredName.trim() === ''){\n      setEnteredNameIsValid(false);\n      return;\n    };\n\n    console.log(enteredName);\n    const enteredValue = nameInputref.current.value;\n    console.log(enteredValue);\n    setEnteredName(\"\");\n  };\n\n  const invalidInputClasses = enteredNameIsValid ? 'form-control' : 'form-control invalid';\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={invalidInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputref}\n          type=\"text\"\n          id=\"name\"\n          onChange={inputChangeHandler}\n          value={enteredName}\n        />\n        {!enteredNameIsValid && <p className=\"error-text\">Name must not empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}